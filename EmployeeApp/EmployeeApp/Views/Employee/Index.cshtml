@model IEnumerable<EmployeeApp.Models.EmployeeViewModel>

@{
    ViewData["Title"] = "Index";
}

<table id="employees-table" style="width: 100%">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.EmpName)</th>
            <th>@Html.DisplayNameFor(model => model.EmpDateOfHire)</th>
            <th>@Html.DisplayNameFor(model => model.EmpSupervisorName)</th>
            <th>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var m in Model)
        {
            <tr>
                <td>@m.EmpName</td>
                <td>@m.EmpDateOfHire</td>
                <td>@m.EmpSupervisorName</td>
                <td>
                    <button class="btn btn-info" employee-action="details"  data-id="@m.EmpId">Details</button>
                    <button class="btn btn-warning" employee-action="edit" data-id="@m.EmpId">Edit</button>
                    <button class="btn btn-danger" employee-action="delete" data-id="@m.EmpId">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>
@*<button type="button" id="edit-employee" class="btn btn-info">
    Employee
</button>*@
<div id="employee-actions">
    @*<vc:employee token="default" />*@
    @*@await Component.InvokeAsync("Employee")*@
</div>

<script>
    $("#edit-employee").click(function(){
        $("#employee-actions").load("@Url.Action("Edit", new { id = "561e2d88-a747-460f-99e1-cfb1d3d8ca5c" })");
    });
</script>